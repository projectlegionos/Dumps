[
    {
        "name": "cpu_screen_off_background_overload",
        "trigger_sql": "drop trigger if exists cpu_screen_off_overload_trigger;\ncreate trigger if not exists cpu_screen_off_overload_trigger after insert on agg_cpu_device_daily for each row when\n(select cast(getprop('main.audio_screen_off_play_duration') as int)) <= 600000\nand\n(select store('{alertId}', (select screen_off_energy / 1000000 as total_eg from agg_cpu_device_daily))) > 320\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'cpu background energy exceed 516mAh', load('{alertId}'), 0), upload_db('{alertId}', -86400000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;\n",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "cpu_total_du_overload",
        "trigger_sql": "drop trigger if exists cpu_total_du_overload_trigger;\ncreate trigger if not exists cpu_total_du_overload_trigger after insert on trig_hour_timer_eventAgent for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}', (select screen_off_duration + screen_on_duration as total_duration_sum from agg_cpu_device_hourly\n    where start_ts >= NEW.otime - (2*60*60*1000) and end_ts <= NEW.otime - (60*60*1000)))) > 32822000\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'cpu total_du overload triggered', load('{alertId}'), 0), upload_db('{alertId}', -2*3600000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;\n",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "cpu_big_du_overload",
        "trigger_sql": "drop trigger if exists cpu_big_du_overload_trigger;\ncreate trigger if not exists cpu_big_du_overload_trigger after insert on trig_hour_timer_eventAgent for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(\nselect store('{alertId}', (select (sum(c1_duration) / sum(total_duration)) as big_ratio from agg_uidstate_cpuagent_hourly where start_ts >= NEW.otime - (2*60*60*1000) and end_ts <= NEW.otime - (60*60*1000) and type = 0))\n) > 0.3\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'cpu big_du overload triggered', load('{alertId}'), 0), upload_db('{alertId}', -2*3600000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "cpu_screen_on_background_overload",
        "trigger_sql": "drop trigger if exists cpu_screen_on_bg_overload_trigger;\ncreate trigger if not exists cpu_screen_on_bg_overload_trigger after insert on agg_cpu_device_daily for each row when\n(select cast(getprop('main.audio_screen_off_play_duration') as int)) <= 600000\nand\n(select store('{alertId}', (select screen_on_energy / 1000000 as total_eg from agg_cpu_device_daily))) > 1960\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'cpu screen on bg overload triggered', load('{alertId}'), 0), upload_db('{alertId}', -86400000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;\n",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "cellular_background_online",
        "trigger_sql": "drop trigger if exists cellular_background_online_trigger;\ncreate trigger if not exists cellular_background_online_trigger after insert on trig_hour_timer_eventAgent  for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}_du', (select sum(busy_du) from comp_cellularUidState_backward where start_ts >= NEW.otime - (60*60*1000) and end_ts <= NEW.otime and ground_mode = 0))) > 59.5 * 60 * 1000\nand\n(select store('{alertId}_trx', (select sum(rx_trans_byte + tx_trans_byte) from comp_cellularUidState_backward where start_ts >= NEW.otime - (60*60*1000) and end_ts <= NEW.otime and ground_mode = 0))) < 10 * 1024 * 1024\nBEGIN\n  select alert('{alertId}', {alertVersion}, 'cellular background online triggered', load('{alertId}_du') || ',' || load('{alertId}_trx'), 0), upload_db('{alertId}', -3*3600000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "dsp_unsleep_alarm",
        "trigger_sql": "drop trigger if exists dsp_unsleep_alarm_trigger;\ncreate trigger if not exists dsp_unsleep_alarm_trigger after insert on trig_hour_timer_eventAgent for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}', (select sum(cdsp_sleep_duration)*100.0/sum(duration) from agg_dsp_app_hourly where start_ts >= NEW.otime - (60*60*1000) and end_ts <= NEW.otime))) < 50\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'battery drain alert triggered', load('{alertId}'), 0), upload_db('{alertId}', -3*3600000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;",
        "install_if": "select case when vendor_name() like '%qcom%' then 1 else 0 end;",
        "enable": 0
    },
    {
        "name": "audio_volume_mute_alarm",
        "trigger_sql": "drop trigger if exists audio_volume_mute_trigger;\ncreate trigger if not exists audio_volume_mute_trigger after insert on comp_audioPower_audioAgent_intv for each row when\n(select sum(whole_eg) from comp_audioPower_audioAgent_intv where start_ts = NEW.start_ts and volume = 0) > (60000)\nBEGIN\nselect incprop('main.audio_volume_mute_alarm', 1);\nEND",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "battery_drain_alert",
        "trigger_sql": "drop trigger if exists battery_drain_alert_trigger;\ncreate trigger if not exists battery_drain_alert_trigger after insert on trig_level_Battery_eventAgent for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}', (select sum(state) from trig_level_Battery_eventAgent where state < 0 and otime > (NEW.otime - 24*3600000)))) <= -355\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'battery drain alert triggered', load('{alertId}'), 0), upload_db('{alertId}', -86400000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "battery_screen_off_current_alert",
        "trigger_sql": "drop trigger if exists battery_screen_off_current_trigger;\ncreate trigger if not exists battery_screen_off_current_trigger after insert on agg_battery_device_daily for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}', (select discharge_screen_off_fuel_gauge * 3.6 / discharge_screen_off_duration from agg_battery_device_daily WHERE discharge_screen_off_duration > 10*60*1000))) >= 230\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'battery screen off current triggered', load('{alertId}'), 0), upload_db('{alertId}', -12*3600*1000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "ddr_high_freq_du_overload_warning",
        "trigger_sql": "drop trigger if exists ddr_high_freq_du_overload_trigger;\ncreate trigger if not exists ddr_high_freq_du_overload_trigger after insert on agg_ddr_app_hourly for each row when\n(select sum(duration) from agg_ddr_app_hourly where start_ts = NEW.start_ts and freq > 2000) > (1800)\nBEGIN\nselect incprop('main.ddr_high_freq_du_overload_warning', 1);\nEND;",
        "install_if": "",
        "enable": 0
    },
    {
        "name": "cpu_app_overload_alert",
        "trigger_sql": "drop trigger if exists cpu_app_overload_trigger;\ncreate trigger if not exists cpu_app_overload_trigger after insert on meta_daily_dcs_data for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select count(*) from meta_daily_dcs_data\n\twhere date = NEW.date\n\t\tand start_ts = NEW.start_ts\n\t\tand end_ts = NEW.end_ts\n\t\tand agent in ('audio', 'cpu', 'cellular', 'display', 'gpu', 'wifi')\n) = 6\nBEGIN\nwith daily_data_table as (\n\t\tselect agent, daily_data\n\t\t\tfrom meta_daily_dcs_data\n\t\twhere date = NEW.date\n\t\t\tand start_ts = NEW.start_ts\n\t\t\tand end_ts = NEW.end_ts\n\t\t\tand agent in ('audio', 'cpu', 'cellular', 'display', 'gpu', 'wifi')\n\t), audio_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('audio') and key = 'top_app_by_mode' and value <> 'NULL'\n\t), cpu_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('cpu') and key = 'top_app' and value <> 'NULL'\n\t), cellular_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('cellular') and key = 'top_app_by_mode' and value <> 'NULL'\n\t), display_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('display') and key = 'by_app' and value <> 'NULL'\n\t), gpu_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('gpu') and key = 'fg_top_app_by_eg' and value <> 'NULL'\n\t), wifi_table as (\n\t\tselect value as app_json\n\t\t\tfrom daily_data_table, json_each(daily_data)\n\t\twhere agent in ('wifi') and key = 'top_app_by_mode' and value <> 'NULL'\n\t),\n\tbin_threshold_table (alert_id, bin_id, app_name, lower_bin_value, upper_bin_value, threshold) as (\n\t\tselect * from meta_alert_threshold where alert_id = '{alertId}'\n\t),\n\tbin_table (app_name, bin_id, bin_value) as (\n\t\tselect name\n\t\t\t, \"audio_time_poff_soff_bg_speaker\"\n\t\t\t, sum(value) /1000 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\t\tand json_extract(value, '$.screen_mode') = 0\n\t\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\t\tand json_extract(value, '$.energy.channel') = 0 -- 0 for speaker\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_time_poff_sall_bg_bluetooth\"\n\t\t\t, sum(value) / 1000 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 2 -- for bluetooth\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_soff_bg_all\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 0\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_bg_all\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_bg_bluetooth\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 2 -- for bluetooth\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_bg_headset\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 1 -- for headset\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_bg_speaker\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 0 -- for speaker\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_fg_all\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 1\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_duration_poff_son_fg_bluetooth\"\n\t\t\t, sum(value) / 1000.0 as audio_time\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.duration') as durations\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 1\n\t\t\t\tand json_extract(value, '$.energy.channel') = 2 -- for bluetooth\n\t\t\t)t , json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_energy_poff_son_bg_all\"\n\t\t\t, sum(value) / 1000000.0 as audio_eg\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.total_eg') as total_egs\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t)t , json_each(total_egs)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_energy_poff_son_bg_bluetooth\"\n\t\t\t, sum(value) / 1000000.0 as audio_eg\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.total_eg') as total_egs\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 2 -- for bluetooth\n\t\t\t)t , json_each(total_egs)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_energy_poff_son_bg_speaker\"\n\t\t\t, sum(value) / 1000000.0 as audio_eg\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.total_eg') as total_egs\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\t\t\tand json_extract(value, '$.energy.channel') = 0 -- for speaker\n\t\t\t)t , json_each(total_egs)\n\t\tgroup by name\n\t\tUNION\n\t\tselect name\n\t\t\t, \"audio_energy_poff_son_fg_all\"\n\t\t\t, sum(value) / 1000000.0 as audio_eg\n\t\tfrom(\n\t\t\tselect json_extract(value, '$.player_app') as name, json_extract(value, '$.energy.total_eg') as total_egs\n\t\t\tfrom json_each(app_json), audio_table\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\t\tand json_extract(value, '$.ground_mode') = 1\n\t\t\t)t , json_each(total_egs)\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cellular_duration_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.rx_time') + json_extract(value, '$.rx_5g_time')\n\t\t\t\t+ json_extract(value, '$.tx_4g_time') + json_extract(value, '$.tx_5g_time')\n\t\t\t) / 1000.0 as duration\n\t\tfrom json_each(app_json), cellular_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cellular_energy_poff_soff_bg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as duration\n\t\tfrom json_each(app_json), cellular_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 0\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cellular_energy_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as duration\n\t\tfrom json_each(app_json), cellular_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cpu_energy_pon_sall_bg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as total_eg\n\t\tfrom json_each(app_json), cpu_table\n\t\twhere json_extract(value, '$.type') = 'uid'\n\t\t\tand json_extract(value, '$.power_mode') = '1'\n\t\t\tand json_extract(value, '$.ground_mode') = '0'\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cpu_energy_poff_sall_bg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as total_eg\n\t\tfrom json_each(app_json), cpu_table\n\t\twhere json_extract(value, '$.type') = 'uid'\n\t\t\tand json_extract(value, '$.power_mode') = '0'\n\t\t\tand json_extract(value, '$.ground_mode') = '0'\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, \"cpu_energy_poff_son_fg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as total_eg\n\t\tfrom json_each(app_json), cpu_table\n\t\twhere json_extract(value, '$.type') = 'uid'\n\t\t\tand json_extract(value, '$.power_mode') = '0'\n\t\t\tand json_extract(value, '$.screen_mode') = '1'\n\t\t\tand json_extract(value, '$.ground_mode') = '1'\n\t\tgroup by name\n\t\tUNION\n\t\tselect\n\t\t\tname\n\t\t\t, 'display_duration_poff_son'\n\t\t\t, sum(value) / 1000.0 as duration\n\t\tfrom (\n\t\t\tselect\n\t\t\t\tjson_extract(value, '$.app') as name, json_extract(value, '$.duration') as durations\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tjson_extract(value, '$.apps') as apps\n\t\t\t\tfrom json_each(app_json), display_table\n\t\t\t)t, json_each(apps)\n\t\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t)t2, json_each(durations)\n\t\tgroup by name\n\t\tUNION\n\t\tselect\n\t\t\tjson_extract(value, '$.app') as name\n\t\t\t, \"gpu_duration_poff_son\"\n\t\t\t, sum(json_extract(value, '$.total_du')) / 1000.0 as duration\n\t\tfrom json_each(app_json), gpu_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_duration_poff_soff_bg\"\n\t\t\t, sum(json_extract(value, '$.busy_du')) / 1000.0 as duration\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 0\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_duration_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.busy_du')) / 1000.0 as duration\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_energy_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as total_eg\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_rx_byte_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.rx_byte')) / 1024.0 / 1024.0  as byte\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_tx_byte_poff_son_bg\"\n\t\t\t, sum(json_extract(value, '$.tx_byte')) / 1024.0 / 1024.0  as byte\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_tx_byte_poff_son_fg\"\n\t\t\t, sum(json_extract(value, '$.tx_byte')) / 1024.0 / 1024.0  as byte\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.screen_mode') = 1\n\t\t\tand json_extract(value, '$.ground_mode') = 1\n\t\tgroup by name\n\t\tUNION\n\t\tselect json_extract(value, '$.package_name') as name\n\t\t\t, \"wifi_time_poff_sall_bg\"\n\t\t\t, sum(json_extract(value, '$.tx_time') + json_extract(value, '$.rx_time')) / 1000 as wifi_time\n\t\tfrom json_each(app_json), wifi_table\n\t\twhere json_extract(value, '$.power_mode') = 0\n\t\t\tand json_extract(value, '$.ground_mode') = 0\n\t\tgroup by name\n\t\tUNION\n\t\tselect app_name\n\t\t\t, bin_id\n\t\t\t, 0\n\t\tfrom bin_threshold_table\n\t\twhere bin_id = 'default'\n\t),\n\tthreshold_table (bin_id, app_name, lower_bin_value, upper_bin_value, threshold, bin_value) as (\n\t\tselect t1.bin_id, t1.app_name, t1.lower_bin_value, t1.upper_bin_value, t1.threshold, t2.bin_value\n\t\tfrom bin_threshold_table t1 inner join bin_table t2\n\t\ton t1.bin_id = t2.bin_id\n\t\t\tand t2.bin_value >= t1.lower_bin_value\n\t\t\tand t2.bin_value < t1.upper_bin_value\n\t\twhere (instr(t2.app_name, obfuscate(t1.app_name)) > 0 or t1.app_name = t2.app_name)\n\t),\n\tcpu_bg_table (app_name, total_eg) as (\n\t\tselect json_extract(value, '$.name') as name\n\t\t\t, sum(json_extract(value, '$.total_eg')) / 1000000.0 as total_eg\n\t\tfrom json_each(app_json), cpu_table\n\t\twhere json_extract(value, '$.type') = 'uid' and json_extract(value, '$.ground_mode') = '0'\n\t\tgroup by name\n\t),\n\tresult_table (result) as (\n\t\tselect json_group_array(sub_result) from (\n\t\t\tselect json_object (\n\t\t\t\t'app_name', threshold_table.app_name\n\t\t\t\t, 'hash_app_name', cpu_bg_table.app_name\n\t\t\t\t, 'total_eg', cpu_bg_table.total_eg\n\t\t\t\t, 'bin_id', threshold_table.bin_id\n\t\t\t\t, 'lower_bin_value', threshold_table.lower_bin_value\n\t\t\t\t, 'upper_bin_value', threshold_table.upper_bin_value\n\t\t\t\t, 'bin_value', threshold_table.bin_value\n\t\t\t\t, 'threshold', threshold_table.threshold\n\t\t\t) as sub_result\n\t\t\tfrom cpu_bg_table inner join threshold_table\n\t\t\t\ton (instr(cpu_bg_table.app_name, obfuscate(threshold_table.app_name)) > 0 or (threshold_table.app_name = 'all'))\n\t\t\t\t\tand cpu_bg_table.total_eg > threshold_table.threshold\n\t\t)\n\t)\n\nselect alert('{alertId}'\n\t\t, {alertVersion}\n\t\t, 'cpu app power overload triggered'\n\t\t, json_object (\n\t\t\t'reason', result\n\t\t\t, 'upload_result',  upload_db('{alertId}', -86400000, 0, 0)\n\t\t\t, 'sys_log',  trigger_log(1, '{alertId}', 60, 23)\n\t\t\t, 'otrace_log',  triggerOTraceLog(10000)\n\t\t)\n\t\t, 0\n\t) as trigger_result\nfrom result_table\nwhere exists (\n\tselect *\n\tfrom result_table\n\twhere result is not null and result <> '[]'\n);\nEND;",
        "install_if": "",
        "enable": 0,
        "version": 3
    },
    {
        "name": "thermal_uptrend_cnt_warning",
        "trigger_sql": "drop trigger if exists thermal_uptrend_cnt_warning_trigger;\ncreate trigger if not exists thermal_uptrend_cnt_warning_trigger after insert on agg_thermalAgent_daily for each row when\n(select alert_cnt('{alertId}')) = 0\nand\n(select store('{alertId}',\n    (\n        select sum(value) as dur\n        from(\n            select json_extract(value, '$.tmp') as dur, json_extract(value, '$.typ') as thermal_type\n            from json_each(agg_thermalAgent_daily.histogram) , agg_thermalAgent_daily\n        ), json_each(dur)\n        where id > 8\n        and thermal_type = 'shell_front'\n    )\n)) > 72000000\nBEGIN\nselect alert('{alertId}', {alertVersion}, 'thermal shell temp is higher than 42 celsius for 6000000s', load('{alertId}'), 0), upload_db('{alertId}', -86400000, 0, 0), trigger_log(1, '{alertId}', 60, 23);\nEND;",
        "install_if": "",
        "enable": 0
    }
]
